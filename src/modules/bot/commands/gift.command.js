import plural from 'plural-ru'

import { getUsersWithScore } from '../utils/getUsersWithScore.js'
import NexiaService from '../../nexias/Nexia.service.js'
import UserService from '../../users/User.service.js'
import createReplyChain from '../utils/createReplyChain.js'
import { AKIO_BIRTHDAY } from '../../../core/constants/stickers.js'

import { CommandType } from './index.js'

const giftCommand = async (ctx) => {
  if (!ctx.message.reply_message) {
    return ctx.reply('–ù–µ –≤—ã–±—Ä–∞–Ω–∞ –Ω–µ–∫—Å–∏—è, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–∞—Ä–∏—Ç—å. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ—Å–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ')
  }

  const message = ctx.message.text.replace(CommandType.GIFT, '').trim()
  const recipientIdMatch = (message.match(/id[\d]+/) || [])[0]
  const recipientId = (recipientIdMatch || '').replace('id', '')
  
  if (!recipientId) {
    return ctx.reply('–ù–µ —É–∫–∞–∑–∞–Ω –æ–¥–∞—Ä–∏–≤–∞–µ–º—ã–π. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ "/gift @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_–∫–æ—Ç–æ—Ä–æ–º—É_—Ö–æ—Ç–∏—Ç–µ_–ø–æ–¥–∞—Ä–∏—Ç—å" –∏ –ø–µ—Ä–µ—Å–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ')
  }

  const nexia = await NexiaService.getByMessageId({
    message_id: ctx.message.reply_message.conversation_message_id
  })

  if (!nexia) {
    return ctx.reply('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∞—Ä–∏—Ç—å –Ω–µ–∫—Å–∏—é. –¢–∞–∫–∞—è –Ω–µ–∫—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞...')
  }

  const [nexiaOwner, recipient, users] = await Promise.all([
    UserService.getById({ user_id: nexia.belongs_to_user_id }),
    UserService.getByVkLogin({ vk_login: recipientId }),
    getUsersWithScore(ctx)
  ])

  const nexiaUserOwner = users.find(user => `${user.id}` === `${nexiaOwner.vk_login}`)
  const recipientUser = users.find(user => `${user.id}` === `${recipient.vk_login}`)

  if (!recipient || !recipientUser) {
    return ctx.reply('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ç–æ–≥–æ, –∫–æ–º—É –Ω—É–∂–Ω–æ –ø–æ–¥–∞—Ä–∏—Ç—å –Ω–µ–∫—Å–∏—é...')
  }
    
  if (!nexiaUserOwner) {
    return ctx.reply('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –Ω–µ–∫—Å–∏–∏')
  }

  if (ctx.message.from_id !== nexiaUserOwner.id) {
    return ctx.reply(`–≠—Ç–æ –Ω–µ —Ç–≤–æ—è –Ω–µ–∫—Å–∏—è, –µ–µ –Ω–µ–ª—å–∑—è –ø–æ–¥–∞—Ä–∏—Ç—å. –ù–µ–∫—Å–∏—è –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç @${nexiaUserOwner.nickname}`)
  }

  if (ctx.message.from_id === recipientUser.id) {
    return ctx.reply('–ù–µ–ª—å–∑—è –ø–æ–¥–∞—Ä–∏—Ç—å –Ω–µ–∫—Å–∏—é —Å–∞–º–æ–º—É —Å–µ–±–µ')
  }

  try {
    await NexiaService.changeOwner({ 
      nexia_id: nexia.nexia_id, 
      belongs_to_user_id: recipient.user_id 
    })

    const answer = createReplyChain(ctx)

    const from = `[id${nexiaUserOwner.id}|${nexiaUserOwner.firstName} ${nexiaUserOwner.lastName}]`
    const to = `[id${recipientUser.id}|${recipientUser.firstName} ${recipientUser.lastName}]`
    const gift = plural(nexia.count, '—Å–≤–æ—é –Ω–µ–∫—Å–∏—é', `—Å–≤–æ–∏ ${nexia.count} –Ω–µ–∫—Å–∏–∏`, `—Å–≤–æ–∏ ${nexia.count} –Ω–µ–∫—Å–∏–π`)
    answer
      .reply(`üéâ –û–≥–æ, ${from} –¥–∞—Ä–∏—Ç ${to} ${gift}`)
      .reply('', null, null, AKIO_BIRTHDAY)

  } catch (e) {
    return ctx.reply('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∞—Ä–∏—Ç—å –Ω–µ–∫—Å–∏—é. –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞.')
  }
}

export default giftCommand
